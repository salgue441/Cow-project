name: Tesnsorflow CI/CD
on:
  push:
    branches: []

  pull_request:
    branches: [main]

jobs:
  notebook-test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.9, 3.11.2]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nbconvert nbformat jupyter black isort papermill
          pip install -r requirements.txt
        shell: bash
      - name: Convert notebook to python script
        run: |
          mkdir -p converted_notebooks
          for nb in notebooks/*.ipynb; do
            if [ -f "$nb" ]; then
              jupyter nbconvert --to script "$nb" --output-dir=./converted_notebooks/
            fi
          done
        shell: bash
      - name: Format converted notebooks
        run: |
          black ./converted_notebooks/
          isort ./converted_notebooks/
        shell: bash
      - name: Execute Notebooks
        run: |
          mkdir -p notebook_outputs
          for nb in notebooks/*.ipynb; do
            if [ -f "$nb" ]; then
              papermill "$nb" "notebook_outputs/$(basename $nb)" -k python3
            fi
          done
        shell: bash
      - name: Upload notebook coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./notebook_outputs/*.ipynb
          fail_ci_if_error: true
          flags: notebooks

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.9, 3.11.2]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        shell: bash
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11.2
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pylint black
      - name: Format with black
        run: |
          black src/ tests/
      - name: Lint with flake8
        run: |
          flake8 src/ tests/ --max-line-length=88
      - name: Check with pylint
        run: |
          pylint src/ tests/ --disable=C0111

  build_and_push:
    needs: [test, lint, notebook-test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/tensorflow-cicd:latest
